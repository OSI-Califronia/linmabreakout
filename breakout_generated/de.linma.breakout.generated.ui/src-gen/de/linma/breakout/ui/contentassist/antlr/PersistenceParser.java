/*
* generated by Xtext
*/
package de.linma.breakout.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import de.linma.breakout.services.PersistenceGrammarAccess;

public class PersistenceParser extends AbstractContentAssistParser {
	
	@Inject
	private PersistenceGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected de.linma.breakout.ui.contentassist.antlr.internal.InternalPersistenceParser createParser() {
		de.linma.breakout.ui.contentassist.antlr.internal.InternalPersistenceParser result = new de.linma.breakout.ui.contentassist.antlr.internal.InternalPersistenceParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getPersistenceModelAccess().getGroup(), "rule__PersistenceModel__Group__0");
					put(grammarAccess.getPersistenceEntityAccess().getGroup(), "rule__PersistenceEntity__Group__0");
					put(grammarAccess.getPersistenceEntityAccess().getGroup_3_0(), "rule__PersistenceEntity__Group_3_0__0");
					put(grammarAccess.getPersistenceEntityAccess().getGroup_3_1(), "rule__PersistenceEntity__Group_3_1__0");
					put(grammarAccess.getPropertyAccess().getGroup_0(), "rule__Property__Group_0__0");
					put(grammarAccess.getPropertyAccess().getGroup_0_3(), "rule__Property__Group_0_3__0");
					put(grammarAccess.getPropertyAccess().getGroup_1(), "rule__Property__Group_1__0");
					put(grammarAccess.getPropertyAccess().getGroup_1_0(), "rule__Property__Group_1_0__0");
					put(grammarAccess.getPersistenceModelAccess().getNameAssignment_1(), "rule__PersistenceModel__NameAssignment_1");
					put(grammarAccess.getPersistenceModelAccess().getPersistenceEntitiesAssignment_3(), "rule__PersistenceModel__PersistenceEntitiesAssignment_3");
					put(grammarAccess.getPersistenceEntityAccess().getNameAssignment_1(), "rule__PersistenceEntity__NameAssignment_1");
					put(grammarAccess.getPersistenceEntityAccess().getHasPersistenceNameAssignment_3_0_0(), "rule__PersistenceEntity__HasPersistenceNameAssignment_3_0_0");
					put(grammarAccess.getPersistenceEntityAccess().getPersistenceNameAssignment_3_0_1(), "rule__PersistenceEntity__PersistenceNameAssignment_3_0_1");
					put(grammarAccess.getPersistenceEntityAccess().getIdPropertyAssignment_3_1_1(), "rule__PersistenceEntity__IdPropertyAssignment_3_1_1");
					put(grammarAccess.getPersistenceEntityAccess().getPropertyAssignment_3_2(), "rule__PersistenceEntity__PropertyAssignment_3_2");
					put(grammarAccess.getPropertyAccess().getNameAssignment_0_1(), "rule__Property__NameAssignment_0_1");
					put(grammarAccess.getPropertyAccess().getIsNullableAssignment_0_3_0(), "rule__Property__IsNullableAssignment_0_3_0");
					put(grammarAccess.getPropertyAccess().getNullableAssignment_0_3_1(), "rule__Property__NullableAssignment_0_3_1");
					put(grammarAccess.getPropertyAccess().getTypeAssignment_1_0_1(), "rule__Property__TypeAssignment_1_0_1");
					put(grammarAccess.getPersistenceEntityAccess().getUnorderedGroup_3(), "rule__PersistenceEntity__UnorderedGroup_3");
					put(grammarAccess.getPropertyAccess().getUnorderedGroup(), "rule__Property__UnorderedGroup");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			de.linma.breakout.ui.contentassist.antlr.internal.InternalPersistenceParser typedParser = (de.linma.breakout.ui.contentassist.antlr.internal.InternalPersistenceParser) parser;
			typedParser.entryRuleModel();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public PersistenceGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(PersistenceGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
